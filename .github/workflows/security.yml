name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      run: |
        git clone https://github.com/${{ github.repository }}.git .
        git checkout ${{ github.sha }}

    - name: Setup Node.js
      run: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt-get install -y nodejs

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit --audit-level=moderate

    - name: Run Snyk to check for vulnerabilities
      run: |
        if [ -n "${{ secrets.SNYK_TOKEN }}" ]; then
          npm install -g snyk
          snyk test --severity-threshold=high
        else
          echo "SNYK_TOKEN not provided, skipping Snyk scan"
        fi

  code-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      run: |
        git clone https://github.com/${{ github.repository }}.git .
        git checkout ${{ github.sha }}

    - name: Run CodeQL Analysis
      run: |
        # Install CodeQL CLI
        wget https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-linux64.zip
        unzip codeql-linux64.zip
        sudo mv codeql /usr/local/bin/

        # Download CodeQL queries
        git clone https://github.com/github/codeql.git codeql-repo

        # Run analysis
        codeql database create codeql-db --language=javascript
        codeql database analyze codeql-db codeql-repo/javascript/ql/src --format=sarif-latest --output=codeql-results.sarif

        echo "CodeQL analysis completed. Results saved to codeql-results.sarif"

  container-scan:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      run: |
        git clone https://github.com/${{ github.repository }}.git .
        git checkout ${{ github.sha }}

    - name: Build Docker image
      run: docker build -t token-price-service:latest .

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy

    - name: Run Trivy vulnerability scanner
      run: |
        trivy image --format table --exit-code 1 --ignore-unfixed --vuln-type os,library --severity CRITICAL,HIGH token-price-service:latest

  k8s-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      run: |
        git clone https://github.com/${{ github.repository }}.git .
        git checkout ${{ github.sha }}

    - name: Install kube-score
      run: |
        wget https://github.com/zegl/kube-score/releases/latest/download/kube-score_linux_amd64.tar.gz
        tar -xzf kube-score_linux_amd64.tar.gz
        sudo mv kube-score /usr/local/bin/

    - name: Run Kube-score
      run: |
        if [ -d "gitops/" ]; then
          kube-score score gitops/ --kubernetes-version v1.28
        else
          echo "No gitops directory found, skipping kube-score"
        fi

    - name: Install kubeaudit
      run: |
        wget https://github.com/Shopify/kubeaudit/releases/latest/download/kubeaudit_linux_amd64.tar.gz
        tar -xzf kubeaudit_linux_amd64.tar.gz
        sudo mv kubeaudit /usr/local/bin/

    - name: Run Kubeaudit
      run: |
        if [ -d "gitops/" ]; then
          kubeaudit all gitops/
        else
          echo "No gitops directory found, skipping kubeaudit"
        fi
